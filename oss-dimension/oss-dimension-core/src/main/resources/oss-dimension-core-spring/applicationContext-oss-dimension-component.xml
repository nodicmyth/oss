<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="100000"/>
        <property name="maxIdle" value="1000"/>
        <property name="minIdle" value="100"/>
        <property name="maxWaitMillis" value="100000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <bean id="redisClientBuilder" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
        <constructor-arg ref="jedisPoolConfig"/>
        <constructor-arg>
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg>
                        <value>${redis.server1.host}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${redis.server1.port}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${redis.server1.instance}</value>
                    </constructor-arg>
                </bean>
                <!--<bean class="redis.clients.jedis.JedisShardInfo">-->
                    <!--<constructor-arg>-->
                        <!--<value>${redis.server2.host}</value>-->
                    <!--</constructor-arg>-->
                    <!--<constructor-arg>-->
                        <!--<value>${redis.server2.port}</value>-->
                    <!--</constructor-arg>-->
                    <!--<constructor-arg>-->
                        <!--<value>${redis.server2.instance}</value>-->
                    <!--</constructor-arg>-->
                <!--</bean>-->
                <!--<bean class="redis.clients.jedis.JedisShardInfo">-->
                    <!--<constructor-arg value="127.0.0.1"/>-->
                    <!--<constructor-arg type="int" value="7001"/>-->
                    <!--<constructor-arg value="instance:02"/>-->
                <!--</bean>-->
                <!--<bean class="redis.clients.jedis.JedisShardInfo">-->
                    <!--<constructor-arg value="127.0.0.1"/>-->
                    <!--<constructor-arg type="int" value="7003"/>-->
                    <!--<constructor-arg value="instance:03"/>-->
                <!--</bean>-->
            </list>
        </constructor-arg>
    </bean>

    <bean name="jedis" factory-bean="redisClientBuilder" factory-method="getResource" destroy-method="close" />

    <bean name="redisClient" class="com.data.dw.oss.dimension.consumer.test.redis.client.RedisClient">
        <property name="redisClientBuilder" ref="redisClientBuilder"/>
        <property name="storeKey">
            <value>${redis.store.dimInfo}</value>
        </property>
        <property name="time_to_live">
            <value type="int">${redis.livetime.second.dimInfo}</value>
        </property>
    </bean>

    <!--<bean id="redisSentinel" class="redis.clients.jedis.JedisSentinelPool">-->
        <!--<constructor-arg index="0" value="mymaster" />-->
        <!--<constructor-arg index="1">-->
            <!--<set>-->
                <!--<value>hostofsentinel:26379</value>-->
            <!--</set>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg index="2" ref="jedisPoolConfig" />-->
    <!--</bean>-->


    <!-- 线程池 -->
    <!--<bean id="threadPool" class="com.qunar.pay.g2.core.credit.utils.ThreadPoolManager" -->
        <!--init-method="init" destroy-method="destroy">-->
        <!--&lt;!&ndash; 核心线程数 &ndash;&gt;-->
        <!--<property name="coreThreadCount">-->
            <!--<value>10</value>-->
        <!--</property>-->
        <!---->
        <!--&lt;!&ndash; 最大线程数 &ndash;&gt;-->
        <!--<property name="maxThreadCount">-->
            <!--<value>150</value>-->
        <!--</property>-->
        <!---->
        <!--&lt;!&ndash; 队列大小 &ndash;&gt;-->
        <!--<property name="queueSize">-->
            <!--<value>30000</value>-->
        <!--</property>-->
        <!---->
        <!--&lt;!&ndash; 存活时间 &ndash;&gt;-->
        <!--<property name="keepAliveTime">-->
            <!--<value>0</value>-->
        <!--</property>-->
        <!---->
    <!--</bean>-->
    <!---->
    <!---->
	<!--<bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">-->
        <!--<constructor-arg>-->
            <!--<list>-->
                <!--<bean class="java.net.InetSocketAddress">-->
                    <!--<constructor-arg>-->
                        <!--<value>${memcached.server1.host}</value>-->
                    <!--</constructor-arg>-->
                    <!--<constructor-arg>-->
                        <!--<value>${memcached.server1.port}</value>-->
                    <!--</constructor-arg>-->
                <!--</bean>-->
                <!--<bean class="java.net.InetSocketAddress">-->
                    <!--<constructor-arg>-->
                        <!--<value>${memcached.server2.host}</value>-->
                    <!--</constructor-arg>-->
                    <!--<constructor-arg>-->
                        <!--<value>${memcached.server2.port}</value>-->
                    <!--</constructor-arg>-->
                <!--</bean>-->
                <!--<bean class="java.net.InetSocketAddress">-->
                    <!--<constructor-arg>-->
                        <!--<value>${memcached.server3.host}</value>-->
                    <!--</constructor-arg>-->
                    <!--<constructor-arg>-->
                        <!--<value>${memcached.server3.port}</value>-->
                    <!--</constructor-arg>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg>-->
            <!--<list>-->
                <!--<value>${memcached.server1.weight}</value>-->
                <!--<value>${memcached.server2.weight}</value>-->
                <!--<value>${memcached.server3.weight}</value>-->
            <!--</list>-->
        <!--</constructor-arg>-->
        <!--<property name="connectionPoolSize" value="${memcached.connection.pool.size}"></property>-->
        <!--<property name="commandFactory">  -->
            <!--<bean class="net.rubyeye.xmemcached.command.TextCommandFactory" />  -->
        <!--</property>  -->
        <!--<property name="sessionLocator">  -->
            <!--<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator" />  -->
        <!--</property>  -->
        <!--<property name="transcoder">  -->
            <!--<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />  -->
        <!--</property>-->
        <!--<property name="bufferAllocator">-->
            <!--<bean class="net.rubyeye.xmemcached.buffer.SimpleBufferAllocator"></bean>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean name="memcachedClient" factory-bean="memcachedClientBuilder" factory-method="build" destroy-method="shutdown" />-->
    <!---->
    
</beans>